using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.EntityFrameworkCore;
using {{namespace}}.Infrastructure.Data;
using {{namespace}}.Application.Interfaces;
using {{namespace}}.Application.Services;
using {{namespace}}.Domain.Repositories;
using {{namespace}}.Infrastructure.Repositories;

namespace {{namespace}}
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        public void ConfigureServices(IServiceCollection services)
        {
            // Add DbContext
            services.AddDbContext<{{namespace}}DbContext>(options =>
                options.UseSqlServer(Configuration.GetConnectionString("DefaultConnection")));

            // Add Repositories
            services.AddScoped(typeof(IRepository<>), typeof(Repository<>));
            {{#each entities}}
            services.AddScoped<I{{name}}Repository, {{name}}Repository>();
            {{/each}}

            // Add Application Services
            {{#each entities}}
            services.AddScoped<I{{name}}Service, {{name}}Service>();
            {{/each}}

            // Add AutoMapper
            services.AddAutoMapper(typeof(Startup));

            // Add Controllers
            services.AddControllers();

            // Add Swagger
            services.AddSwaggerGen(c =>
            {
                c.SwaggerDoc("v1", new Microsoft.OpenApi.Models.OpenApiInfo { Title = "{{namespace}} API", Version = "v1" });
            });
        }

        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
                app.UseSwagger();
                app.UseSwaggerUI(c => c.SwaggerEndpoint("/swagger/v1/swagger.json", "{{namespace}} API v1"));
            }

            app.UseHttpsRedirection();
            app.UseRouting();
            app.UseAuthorization();

            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllers();
            });
        }
    }
} 